require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN; // –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const GROUP_CHAT_ID = process.env.GROUP_CHAT_ID; // ID –≥—Ä—É–ø–ø—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userState = {};

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"
const mainMenu = {
  reply_markup: {
    keyboard: [[{ text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚Ü©Ô∏è" }]],
    resize_keyboard: true,
    one_time_keyboard: true,
  },
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞
const citizenshipKeyboard = {
  reply_markup: {
    keyboard: [
      [{ text: "–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –†–§ üá∑üá∫" }],
      [{ text: "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω üåç" }],
    ],
    resize_keyboard: true,
    one_time_keyboard: true,
  },
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏ —Ñ–æ—Ä–º—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞
const statusKeyboard = {
  reply_markup: {
    keyboard: [
      [{ text: "–ù–æ–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç" }],
      [{ text: "–ë—ã–≤—à–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ (—É–≤–æ–ª–∏–ª—Å—è < –º–µ—Å—è—Ü)" }],
      [{ text: "–ë—ã–≤—à–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ (—É–≤–æ–ª–∏–ª—Å—è > –º–µ—Å—è—Ü)" }],
    ],
    resize_keyboard: true,
    one_time_keyboard: true,
  },
};

const employmentKeyboard = {
  reply_markup: {
    keyboard: [
      [{ text: "–°–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å" }],
      [{ text: "–ì–ü–•" }],
    ],
    resize_keyboard: true,
    one_time_keyboard: true,
  },
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserMention(msg) {
  return msg.from.username ? `@${msg.from.username}` : `id${msg.from.id}`;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start|–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚Ü©Ô∏è/, (msg) => {
  const chatId = msg.chat.id;

  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userState[chatId] = { step: "START", data: {} };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
  bot.sendMessage(
    chatId,
    "üö¥üèº‚Äç‚ôÇÔ∏è –ö–æ–º–ø–∞–Ω–∏—è –°–∞–º–æ–∫–∞—Ç –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å –Ω–∞ —Ä–∞–±–æ—Ç—É!\n\n" +
      "–£ –Ω–∞—Å –µ—Å—Ç—å –¥–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:\n" +
      "1Ô∏è‚É£ _–ö—É—Ä—å–µ—Ä-–¥–æ—Å—Ç–∞–≤—â–∏–∫_ ‚Äì –¥–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ –∏–ª–∏ –ø–µ—à–∫–æ–º.\n" +
      "2Ô∏è‚É£ _–°–±–æ—Ä—â–∏–∫ –∑–∞–∫–∞–∑–æ–≤_ ‚Äì –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ –≤ —Ü–µ–Ω—Ç—Ä–µ –≤—ã–¥–∞—á–∏.\n\n" +
      "–ê–∫—Ç—É–∞–ª–µ–Ω –ª–∏ –¥–ª—è –≤–∞—Å –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã? –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é! üòä",
    {
      reply_markup: {
        keyboard: [
          [{ text: "–ö—É—Ä—å–µ—Ä-–¥–æ—Å—Ç–∞–≤—â–∏–∫ üö¥‚Äç‚ôÇÔ∏è" }, { text: "–°–±–æ—Ä—â–∏–∫ –∑–∞–∫–∞–∑–æ–≤ üõí" }],
        ],
        resize_keyboard: true,
        one_time_keyboard: true,
      },
      parse_mode: "Markdown",
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  if (!userState[chatId]) {
    userState[chatId] = { step: "START", data: {} };
  }

  const state = userState[chatId];

  try {
    switch (state.step) {
      case "START":
        if (text === "–ö—É—Ä—å–µ—Ä-–¥–æ—Å—Ç–∞–≤—â–∏–∫ üö¥‚Äç‚ôÇÔ∏è") {
          await bot.sendMessage(
            chatId,
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—é *–ö—É—Ä—å–µ—Ä-–¥–æ—Å—Ç–∞–≤—â–∏–∫*.\n\n" +
              "‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Ö–æ–¥: –æ—Ç 100,000 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü.\n" +
              "üéÅ –ë–æ–Ω—É—Å—ã: –¥–æ 25,000 —Ä—É–±–ª–µ–π –∑–∞ –¥—Ä—É–≥–∞.\n" +
              "üåß –ù–∞–¥–±–∞–≤–∫–∏: –∑–∞ —Ä–∞–±–æ—Ç—É –≤ –ø–ª–æ—Ö—É—é –ø–æ–≥–æ–¥—É –∏ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏.\n" +
              "üö≤ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∏ —Å—Ç–∏–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞.\n" +
              "üìù –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞ –≤—Å–µ–≥–æ –∑–∞ —á–∞—Å.\n" +
              "üè† –†–∞–±–æ—Ç–∞–π —Ä—è–¥–æ–º —Å –¥–æ–º–æ–º.\n" +
              "‚è∞ –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫: –æ—Ç 2 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å.\n" +
              "üí∏ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤.\n" +
              "üíº –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å –∏–ª–∏ –ì–ü–•.\n" +
              "üéØ –î–æ—Å—Ç–∞–≤–ª—è–π –∑–∞–∫–∞–∑—ã –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ –∏–ª–∏ –ø–µ—à–∫–æ–º. –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–ø–∞–Ω–∏—è! –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∑–∞–∫–∞–∑—ã —Å –ø–æ–º–æ—â—å—é —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥–∞.\n\n" +
              "–ì–æ—Ç–æ–≤—ã —Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏?",
            {
              reply_markup: {
                keyboard: [
                  [{ text: "–ì–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏!" }, { text: "–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç" }],
                ],
                resize_keyboard: true,
                one_time_keyboard: true,
              },
              parse_mode: "Markdown",
            }
          );
          state.step = "CONSENT_COURIER";
        } else if (text === "–°–±–æ—Ä—â–∏–∫ –∑–∞–∫–∞–∑–æ–≤ üõí") {
          await bot.sendMessage(
            chatId,
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—é *–°–±–æ—Ä—â–∏–∫ –∑–∞–∫–∞–∑–æ–≤*.\n\n" +
              "üì¶ –í –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤—Ö–æ–¥–∏—Ç —Å–±–æ—Ä–∫–∞, —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤.\n" +
              "üì≤ –°–≤–æ—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –Ω–∞ –¥–≤–µ –Ω–µ–¥–µ–ª–∏ –≤–ø–µ—Ä–µ–¥, —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –æ—Ç 4-—Ö –¥–æ 16-—Ç–∏ —á–∞—Å–æ–≤.\n" +
              "üí≤ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç 260‚ÇΩ –≤ —á–∞—Å –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.\n" +
              " –±–æ–Ω—É—Å –∑–∞ –≤—ã—Ö–æ–¥ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ, –Ω–∞–¥–±–∞–≤–∫–∞ –∫ –∫–∞–∂–¥–æ–º—É —á–∞—Å—É.\n" +
              "üí∏ –í—ã–ø–ª–∞—Ç—ã –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ, –∫–æ–º–ø–∞–Ω–∏—è –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –Ω–∞–ª–æ–≥.\n" +
              "üö´ –ü–æ–ª–Ω–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤.\n" +
              "üîù –ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç.\n" +
              "üíº –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ–±—É—á–µ–Ω–∏–µ–º –æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å –ª–∏–±–æ –ì–ü–•.\n" +
              "üéì –û–±—É—á–µ–Ω–∏–µ –¥–ª–∏—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –∏ —Ç–∞–∫ –∂–µ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è.\n" +
              "‚öïÔ∏è –ü–æ—Å–ª–µ 40 —á–∞—Å–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–Ω–∏–∂–∫–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—ã –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä—É–µ—Ç–µ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏. –ú—ã –ø–æ–º–æ–∂–µ–º –µ—ë –ø–æ–ª—É—á–∏—Ç—å.\n\n" +
              "–ì–æ—Ç–æ–≤—ã —Å—Ç–∞—Ç—å —Å–±–æ—Ä—â–∏–∫–æ–º –∑–∞–∫–∞–∑–æ–≤?",
            {
              reply_markup: {
                keyboard: [
                  [{ text: "–ì–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å —Å–±–æ—Ä—â–∏–∫–æ–º –∑–∞–∫–∞–∑–æ–≤!" }, { text: "–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç" }],
                ],
                resize_keyboard: true,
                one_time_keyboard: true,
              },
              parse_mode: "Markdown",
            }
          );
          state.step = "CONSENT_COLLECTION";
        }
        break;

      case "CONSENT_COURIER":
        if (text === "–ì–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏!") {
          await bot.sendMessage(chatId, "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –∏–º–µ–Ω–∏. \n\n–ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?", mainMenu);
          state.data.vacancy = "–ö—É—Ä—å–µ—Ä-–¥–æ—Å—Ç–∞–≤—â–∏–∫";
          state.step = "WAITING_NAME";
        } else if (text === "–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç") {
          await bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å! –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è.", mainMenu);
          state.step = "START";
        }
        break;

      case "CONSENT_COLLECTION":
        if (text === "–ì–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å —Å–±–æ—Ä—â–∏–∫–æ–º –∑–∞–∫–∞–∑–æ–≤!") {
          await bot.sendMessage(chatId, "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –∏–º–µ–Ω–∏. \n\n–ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?", mainMenu);
          state.data.vacancy = "–°–±–æ—Ä—â–∏–∫ –∑–∞–∫–∞–∑–æ–≤";
          state.step = "WAITING_NAME";
        } else if (text === "–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç") {
          await bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å! –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è.", mainMenu);
          state.step = "START";
        }
        break;

      case "WAITING_NAME":
        state.data.name = text;
        await bot.sendMessage(chatId, "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?", mainMenu);
        state.step = "WAITING_AGE";
        break;

      case "WAITING_AGE":
        const age = parseInt(text, 10);
        if (isNaN(age)) {
          await bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º.", mainMenu);
        } else if (age < 18) {
          await bot.sendMessage(
            chatId,
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å 18 –ª–µ—Ç. –ë—É–¥—É —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞, –∫–æ–≥–¥–∞ —Å—Ç–∞–Ω–µ—à—å —Å—Ç–∞—Ä—à–µ!",
            mainMenu
          );
          state.step = "START";
        } else {
          state.data.age = age;
          await bot.sendMessage(chatId, "–ö–∞–∫–æ–µ —É —Ç–µ–±—è –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ?", citizenshipKeyboard);
          state.step = "WAITING_CITIZENSHIP";
        }
        break;

      case "WAITING_CITIZENSHIP":
        if (text === "–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –†–§ üá∑üá∫" || text === "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω üåç") {
          state.data.citizenship = text;
          if (state.data.vacancy === "–ö—É—Ä—å–µ—Ä-–¥–æ—Å—Ç–∞–≤—â–∏–∫") {
            await bot.sendMessage(
              chatId,
              "–£–º–µ–µ—Ç–µ –ª–∏ –≤—ã –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ?",
              {
                reply_markup: {
                  keyboard: [[{ text: "–î–∞" }, { text: "–ù–µ—Ç" }]],
                  resize_keyboard: true,
                  one_time_keyboard: true,
                },
              }
            );
            state.step = "WAITING_BIKE";
          } else {
            await bot.sendMessage(chatId, "–° –∫–∞–∫–∏–º —Å—Ç–∞—Ç—É—Å–æ–º –≤—ã –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å?", statusKeyboard);
            state.step = "WAITING_STATUS";
          }
        } else {
          await bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", citizenshipKeyboard);
        }
        break;

      case "WAITING_BIKE":
        if (text === "–î–∞" || text === "–ù–µ—Ç") {
          state.data.bike = text;
          await bot.sendMessage(
            chatId,
            "–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—à–∏–º –∫—É—Ä—å–µ—Ä–æ–º?",
            {
              reply_markup: {
                keyboard: [[{ text: "–ü—Ä–æ–¥–æ–ª–∂–∏–º" }, { text: "–ù–µ –¥—É–º–∞—é" }]],
                resize_keyboard: true,
                one_time_keyboard: true,
              },
            }
          );
          state.step = "WAITING_WALK_COURIER";
        } else {
          await bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", {
            reply_markup: {
              keyboard: [[{ text: "–î–∞" }, { text: "–ù–µ—Ç" }]],
              resize_keyboard: true,
              one_time_keyboard: true,
            },
          });
        }
        break;

      case "WAITING_WALK_COURIER":
        if (text === "–ü—Ä–æ–¥–æ–ª–∂–∏–º") {
          await bot.sendMessage(chatId, "–° –∫–∞–∫–∏–º —Å—Ç–∞—Ç—É—Å–æ–º –≤—ã –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å?", statusKeyboard);
          state.step = "WAITING_STATUS";
        } else if (text === "–ù–µ –¥—É–º–∞—é") {
          await bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å! –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è.", mainMenu);
          state.step = "START";
        } else {
          await bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", {
            reply_markup: {
              keyboard: [[{ text: "–ü—Ä–æ–¥–æ–ª–∂–∏–º" }, { text: "–ù–µ –¥—É–º–∞—é" }]],
              resize_keyboard: true,
              one_time_keyboard: true,
            },
          });
        }
        break;

      case "WAITING_STATUS":
        if (
          text === "–ù–æ–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç" ||
          text === "–ë—ã–≤—à–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ (—É–≤–æ–ª–∏–ª—Å—è –º–µ–Ω—å—à–µ –º–µ—Å—è—Ü–∞)" ||
          text === "–ë—ã–≤—à–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ (—É–≤–æ–ª–∏–ª—Å—è –±–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞)"
        ) {
          state.data.status = text;
          await bot.sendMessage(chatId, "–í –∫–∞–∫–æ–π —Ç—Ä—É–¥–æ–≤–æ–π —Ñ–æ—Ä–º–µ —É–¥–æ–±–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å —Å –∫–æ–º–ø–∞–Ω–∏–µ–π –°–∞–º–æ–∫–∞—Ç?", employmentKeyboard);
          state.step = "WAITING_EMPLOYMENT";
        } else {
          await bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", statusKeyboard);
        }
        break;

      case "WAITING_EMPLOYMENT":
        if (text === "–°–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å" || text === "–ì–ü–•") {
          state.data.employment = text;
          await bot.sendMessage(chatId, "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ò–ù–ù?", mainMenu);
          state.step = "WAITING_INN";
        } else {
          await bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", employmentKeyboard);
        }
        break;

      case "WAITING_INN":
        state.data.inn = text;
        await bot.sendMessage(chatId, "–û—Ç–ª–∏—á–Ω–æ! –î—É–º–∞—é, —Ç—ã –ø–æ–¥—Ö–æ–¥–∏—à—å! üî•\n\n" +
          "–¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã HR-–º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π. üìû", mainMenu);
        state.step = "WAITING_PHONE";
        break;

      case "WAITING_PHONE":
        state.data.phone = text;

        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É
        const userInfo = `
–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:
-------------------
–í–∞–∫–∞–Ω—Å–∏—è: ${state.data.vacancy || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}
–ò–º—è: ${state.data.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
–í–æ–∑—Ä–∞—Å—Ç: ${state.data.age || "–ù–µ —É–∫–∞–∑–∞–Ω"}
–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ: ${state.data.citizenship || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
–£–º–µ–Ω–∏–µ –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ: ${state.data.bike || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
–°—Ç–∞—Ç—É—Å: ${state.data.status || "–ù–µ —É–∫–∞–∑–∞–Ω"}
–§–æ—Ä–º–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞: ${state.data.employment || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}
–ò–ù–ù: ${state.data.inn || "–ù–µ —É–∫–∞–∑–∞–Ω"}
–¢–µ–ª–µ—Ñ–æ–Ω: ${state.data.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}
ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${getUserMention(msg)}
        `;
        await bot.sendMessage(GROUP_CHAT_ID, userInfo);

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await bot.sendMessage(
          chatId,
          "–°–ø–∞—Å–∏–±–æ! HR-–º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. ‚úÖ\n\n" +
          "–ó–∞—è–≤–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —Å 12:00 –¥–æ 19:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ. üïê\n\n" +
          "–ë—É–¥—É —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –∫–æ–º–∞–Ω–¥–µ –∫—É—Ä—å–µ—Ä–æ–≤-–ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –°–∞–º–æ–∫–∞—Ç–∞! –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á! üëã\n\n",
          mainMenu
        );

        // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        state.step = "START";
        break;

      default:
        await bot.sendMessage(chatId, "–û—à–∏–±–∫–∞. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å–Ω–∞—á–∞–ª–∞.", mainMenu);
        state.step = "START";
        break;
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", mainMenu);
    state.step = "START";
  }
});
